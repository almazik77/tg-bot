package view

import (
	"fmt"
	tgbotapi "github.com/mazanur/telegram-bot-api/v6"
	"market-bot/sdk/tgbot"
	"strings"
)

func (v *View) StartAdminView(u *tgbot.Update) (tgbotapi.Message, error) {

	addUsrBtn := v.createButton(ActionAddUser, nil)
	delUsrBtn := v.createButton(ActionDelUser, nil)
	newChatBtn := v.createButton(ActionNewChat, nil)

	msg := new(tgbot.MessageBuilder).
		Message(u.GetChatId(), u.GetMessageId()).
		Edit(u.IsButton()).
		Text("*–ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω*").
		AddKeyboardRow().AddButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", addUsrBtn.Id).
		AddKeyboardRow().AddButton("üóë –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", delUsrBtn.Id).
		AddKeyboardRow().AddButton("üí¨ –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç", newChatBtn.Id).
		Build()

	return logIfError(v.tg.Send(msg))
}

func (v *View) AddHelpAdminMessage(u *tgbot.Update) (tgbotapi.Message, error) {
	bot := v.GetMe()
	botNameWithEscapes := strings.ReplaceAll(bot.UserName, "_", "\\_")
	text := "*–ü–æ–º–æ—â—å*\n\n"
	text += "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ /start\n"
	text += "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ /ping\n"
	text += "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–∏—Ö –Ω–æ–º–∏–Ω–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤ —á—ë—Ä–Ω–æ–º —á–∞—Ç–∏–∫–µ /my\\_nominations \n\n"
	text += fmt.Sprintf("–î–ª—è –ø–æ–∏—Å–∫–∞ FAQ @%v –Ω–∞—á–∏–Ω–∞–π –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å\n", botNameWithEscapes)
	text += fmt.Sprintf("–î–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—à–∏–Ω @%v *auto*:–Ω–æ–º–µ—Ä\\_–º–∞—à–∏–Ω—ã\n", botNameWithEscapes)
	text += fmt.Sprintf("–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ @%v *user*:–∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞\n", botNameWithEscapes)
	text += fmt.Sprintf("–î–ª—è –ø–æ–∏—Å–∫–∞ —á–∞—Ç–æ–≤ @%v *chat*:–Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞\n", botNameWithEscapes)
	text += fmt.Sprintf("–î–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ @%v *question*:–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞\n", botNameWithEscapes)

	msg := new(tgbot.MessageBuilder).
		NewMessage(u.GetChatId()).
		Text(text).
		AddKeyboardRow().AddButtonSwitchForCurrentChat("–ü–æ–∏—Å–∫", "").
		Build()

	return logIfError(v.tg.Send(msg))
}
